{"version":3,"sources":["scripts/example.js"],"names":[],"mappingsfile":"base.js","sourcesContent":["/** @jsx React.DOM */\n\nvar converter = new Showdown.converter();\n\nvar Comment = React.createClass({\n  render: function() {\n    var rawMarkup = converter.makeHtml(this.props.children.toString());\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <span dangerouslySetInnerHTML={{__html: rawMarkup}} />\n      </div>\n    );\n  }\n});\n\nvar CommentBox = React.createClass({\n  loadCommentsFromServer: function() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      success: function(data) {\n        this.setState({data: data});\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  handleCommentSubmit: function(comment) {\n    var comments = this.state.data;\n    comments.push(comment);\n    this.setState({data: comments}, function() {\n      // `setState` accepts a callback. To avoid (improbable) race condition,\n      // `we'll send the ajax request right after we optimistically set the new\n      // `state.\n      $.ajax({\n        url: this.props.url,\n        dataType: 'json',\n        type: 'POST',\n        data: comment,\n        success: function(data) {\n          this.setState({data: data});\n        }.bind(this),\n        error: function(xhr, status, err) {\n          console.error(this.props.url, status, err.toString());\n        }.bind(this)\n      });\n    });\n  },\n  getInitialState: function() {\n    return {data: []};\n  },\n  componentDidMount: function() {\n    this.loadCommentsFromServer();\n    setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  },\n  render: function() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.state.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n});\n\nvar CommentList = React.createClass({\n  render: function() {\n    var commentNodes = this.props.data.map(function(comment, index) {\n      return (\n        // `key` is a React-specific concept and is not mandatory for the\n        // purpose of this tutorial. if you're curious, see more here:\n        // http://facebook.github.io/react/docs/multiple-components.html#dynamic-children\n        <Comment author={comment.author} key={index}>\n          {comment.text}\n        </Comment>\n      );\n    });\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    );\n  }\n});\n\nvar CommentForm = React.createClass({\n  handleSubmit: function(e) {\n    e.preventDefault();\n    var author = this.refs.author.getDOMNode().value.trim();\n    var text = this.refs.text.getDOMNode().value.trim();\n    if (!text || !author) {\n      return;\n    }\n    this.props.onCommentSubmit({author: author, text: text});\n    this.refs.author.getDOMNode().value = '';\n    this.refs.text.getDOMNode().value = '';\n    return;\n  },\n  render: function() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" placeholder=\"Your name\" ref=\"author\" />\n        <input type=\"text\" placeholder=\"Say something...\" ref=\"text\" />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    );\n  }\n});\n\nReact.renderComponent(\n  <CommentBox url=\"comments.json\" pollInterval={2000} />,\n  document.getElementById('content')\n);\n"],"sourceRoot":"/source/"}